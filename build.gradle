buildscript {
    ext {
        cleanArchitectureVersion = '3.26.1'
        springBootVersion = '3.5.4'
        sonarVersion = '6.3.1.5724'
        jacocoVersion = '0.8.13'
        pitestVersion = '1.19.0-rc.1'
        lombokVersion = '1.18.38'
        mapstructVersion = '1.6.3'
        springdocVersion = '2.5.0'
        reactiveCommonsMapperVersion = '0.1.0'
        archunitVersion = '1.4.1'
        jjwtVersion = '0.12.6'
        loggingVersion = '1.0.7'
    }
}

plugins {
    id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
    id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'info.solidsoft.pitest' version "${pitestVersion}" apply false
    id 'org.sonarqube' version "${sonarVersion}"
    id 'jacoco'
}

allprojects {
    apply plugin: 'java'
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
            vendor = JvmVendorSpec.ADOPTIUM
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pedro00627/common-logging")
            credentials {
                username = project.findProperty('githubActor') ?: ""
                password = project.findProperty('githubToken') ?: ""
            }
        }
    }
}

// Apply configurations only to non-domain modules
subprojects {
    if (!project.path.contains(':model') && !project.path.contains(':usecase')) {
        configurations.configureEach {
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'org.springframework.boot' && details.requested.name == 'spring-boot-starter-logging') {
                    details.useTarget "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}"
                }
            }
        }
    }
}

sonar {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions","**/MainApplication.java"
        property "sonar.tests", "src/test"
        property "sonar.java.binaries", "**/build/classes/java/main"
        property "sonar.junit.reportsPath", "**/build/test-results/test"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.pitest.reportPaths", "build/reports/pitest/mutations.xml"
        property "sonar.externalIssuesReportPaths", "build/issues.json"
    }
}

apply from: './main.gradle'