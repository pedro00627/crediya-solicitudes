apply plugin: 'org.springframework.boot'

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    implementation project(':rest-consumer')
    implementation project(':r2dbc-postgresql')
    implementation project(':reactive-web')
    implementation project(':usecase')
    implementation project(':model')

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation "org.reactivecommons.utils:object-mapper:${reactiveCommonsMapperVersion}"

    // Micrometer Tracing dependencies
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    // Context Propagation for Reactive Tracing
    implementation 'io.micrometer:context-propagation:1.0.6'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly('org.springframework.boot:spring-boot-devtools')

    testImplementation "com.tngtech.archunit:archunit:${archunitVersion}"
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    // Sets output jar name
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
}